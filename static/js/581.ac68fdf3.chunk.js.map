{"version":3,"file":"static/js/581.ac68fdf3.chunk.js","mappings":"qSAEaA,EAAKC,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qLAYhBC,EAAMH,EAAAA,GAAAA,MAAYI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wBAclBG,GAVOL,EAAAA,GAAAA,OAAaM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,4IAUdF,EAAAA,GAAAA,MAAYO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,6bACd,SAAAM,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,IACxB,SAAAF,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,IACnB,SAAAF,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,KAyBxBC,EAASX,EAAAA,GAAAA,SAAeY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,odACpB,SAAAM,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,IACxB,SAAAF,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,IACnB,SAAAF,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,IA0BxBG,EAAKb,EAAAA,GAAAA,KAAWc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,uBAIhBa,EAAgBf,EAAAA,GAAAA,IAAUgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,+DAM1Be,EAASjB,EAAAA,GAAAA,OAAakB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,kGAGtB,SAAAM,GAAC,OAAEA,EAAEC,MAAMU,OAAOC,KAAK,IAKvBC,EAAiBrB,EAAAA,GAAAA,OAAasB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,2JAElC,SAAAM,GAAC,OAAEA,EAAEC,MAAMU,OAAOC,KAAK,IACZ,SAAAZ,GAAC,OAAEA,EAAEC,MAAMU,OAAOC,KAAK,IAKlC,SAAAZ,GAAC,OAAEA,EAAEC,MAAMU,OAAOI,KAAK,IACnB,SAAAf,GAAC,OAAEA,EAAEC,MAAMU,OAAOC,KAAK,I,mBCzG9BI,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,SAAUF,EAAAA,KAAaG,SAAS,uGAChCC,MAAOJ,EAAAA,KACJI,MAAM,+KACND,SAAS,uGACZE,MAAOL,EAAAA,KACJM,QAAQ,iBAAkB,qLAC1BC,aAGQC,EAAS,WAEhB,IAAMC,GAASC,EAAAA,EAAAA,MAMnBC,GAAiEC,EAAAA,EAAAA,IAAQ,CACvEC,UAAUC,EAAAA,EAAAA,GAAYf,KADhBgB,EAAQJ,EAARI,SAAUC,EAAYL,EAAZK,aAAcC,EAAKN,EAALM,MAAoBC,EAAMP,EAAnBQ,UAAaD,OAIhDE,EAAQ,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOC,GAAI,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACxBC,QAAQC,IAAIL,GACZR,IAAQ,wBAAAS,EAAAK,OAAA,GAAAP,EAAA,KACX,gBAHaQ,GAAA,OAAAX,EAAAY,MAAA,KAAAC,UAAA,KAKV,OACIC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACNC,EAAAA,EAAAA,MAAChE,EAAI,CAAC8C,SAAUJ,EAAaI,GAAUiB,SAAA,EAEnCF,EAAAA,EAAAA,KAACzD,EAAK,CAAC6D,QAAQ,WAAUF,SAAC,0EAC1BF,EAAAA,EAAAA,KAACjD,GAAQsD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACPC,GAAG,YACC1B,EAAS,aAAW,IACxB2B,YAAY,yEAEbxB,EAAOhB,WAAYiC,EAAAA,EAAAA,KAAA,KAAAE,SAAInB,EAAOhB,SAASyC,WAExCR,EAAAA,EAAAA,KAACzD,EAAK,CAAC6D,QAAQ,QAAOF,SAAC,oIACvBF,EAAAA,EAAAA,KAACvD,GAAK4D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACJI,KAAK,QACLH,GAAG,SACC1B,EAAS,UAAQ,IACrB2B,YAAY,qKAEbxB,EAAOd,QAAS+B,EAAAA,EAAAA,KAAA,KAAAE,SAAInB,EAAOd,MAAMuC,WAElCL,EAAAA,EAAAA,MAAC5D,EAAK,CAAC6D,QAAQ,QAAOF,SAAA,CAAC,6GAAoBF,EAAAA,EAAAA,KAAC/C,EAAI,CAAAiD,SAAC,sFACjDF,EAAAA,EAAAA,KAACvD,GAAK4D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACJI,KAAK,OACLH,GAAG,SACC1B,EAAS,UAAQ,IACrB2B,YAAY,UAEbxB,EAAOb,QAAS8B,EAAAA,EAAAA,KAAA,KAAAE,SAAInB,EAAOb,MAAMsC,WAElCL,EAAAA,EAAAA,MAAChD,EAAe,CAAA+C,SAAA,EACbF,EAAAA,EAAAA,KAAC3C,EAAM,CAACoD,KAAK,SAAQP,SAAC,4DACtBF,EAAAA,EAAAA,KAACvC,EAAc,CAACgD,KAAK,SAASC,QA7CP,WACxBpC,EAAS,YACX,EA2C8D4B,SAAC,4DAMrE,E,UCpEe,SAASS,IACpB,OACIR,EAAAA,EAAAA,MAAAF,EAAAA,SAAA,CAAAC,SAAA,EACAF,EAAAA,EAAAA,KAACY,EAAAA,EAAM,CAACC,MAAM,kGACdb,EAAAA,EAAAA,KAAC3B,EAAQ,KACT2B,EAAAA,EAAAA,KAACc,EAAAA,EAAa,MAGtB,C,8GCZaC,EAAe,SAAAC,GAAK,OAAEA,EAAMC,MAAMC,QAAS,E,6BCE3CC,EAAY/E,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mEAMtB8E,EAAkBhF,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,kGAO5B+E,EAAUjF,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mKAYpBG,EAAML,EAAAA,GAAAA,MAAYO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,oJAUlBgF,EAAYlF,EAAAA,GAAAA,OAAaY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,qLAWzBa,EAAgBf,EAAAA,GAAAA,IAAUc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,oIAS1BiF,EAAcnF,EAAAA,GAAAA,OAAagB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,qLCvD3B6E,EAAU/E,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mFAQnBkF,EAAUpF,EAAAA,GAAAA,KAAWI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uCAIrBmF,EAAMrF,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mKAOR,SAAAM,GAAC,OAAEA,EAAEC,MAAMU,OAAOC,KAAK,IAI9BP,EAAKb,EAAAA,GAAAA,KAAWO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,qD,mBCpBhBoF,EAAgB,SAAHxC,GAAsB,IAAhByC,EAAQzC,EAARyC,SACtBC,GAASC,EAAAA,EAAAA,MAGf,OACI7B,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIF,EAAAA,EAAAA,KAACmB,EAAS,CAAAjB,SACLyB,EAASG,KAAI,SAAAC,GACV,IAAMC,EAAgB,IAAIC,KAAKF,EAAQG,WAAWC,mBAAmB,QAAS,CAC1EC,KAAM,UACNC,MAAO,OACPC,IAAK,YAGT,OACInC,EAAAA,EAAAA,MAACsB,EAAK,CAAAvB,SAAA,EACFC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACAC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAC/C,EAAI,CAAAiD,SAAC,oEAAoB,KAACF,EAAAA,EAAAA,KAACwB,EAAS,CAAAtB,SAAE6B,EAAQtB,WAEnDN,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAC/C,EAAI,CAAAiD,SAAC,0BAAa,IAAE6B,EAAQhE,aAEjCoC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAC/C,EAAI,CAAAiD,SAAC,qCAAc,IAAE6B,EAAQ9D,UAElCkC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAC/C,EAAI,CAAAiD,SAAC,iDAAgB,IAAE6B,EAAQ7D,UAEpCiC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,EACIF,EAAAA,EAAAA,KAAC/C,EAAI,CAAAiD,SAAC,+BAAa,IAAE8B,SAKzBhC,EAAAA,EAAAA,KAAA,OAAKuC,MAAO,GAAIC,OAAQ,GAAI9B,QAAS,WAAKkB,GAASa,EAAAA,EAAAA,IAAcV,EAAQW,KAAK,EAAExC,UAC5EF,EAAAA,EAAAA,KAAA,OAAK2C,UAAWC,EAAAA,EAAS,mBArBrBb,EAAQW,IAyB5B,OAIhB,ECjDaG,EAAe,SAAA7B,GAAK,OAAIA,EAAMW,SAASA,QAAS,E,oBCUhDb,EAAgB,WACzB,IAAMI,GAAW4B,EAAAA,EAAAA,IAAY/B,GAC7BgC,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAA0CL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAUD,EAAA,GAAEE,EAASF,EAAA,GACtB/B,GAAWmB,EAAAA,EAAAA,IAAYD,GACvBjB,GAAWC,EAAAA,EAAAA,MACXgC,GAAWC,EAAAA,EAAAA,MAWXC,EAAe,SAACtD,GAClBmD,EAAUnD,EACd,EAEMuD,EAAerC,EAASsC,QAAO,SAACC,GAAI,OAAKA,EAAKzD,KAAK0D,SAAWR,EAAWQ,MAAM,IAMrF,OACInE,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAACgB,EAAS,CAAAjB,SAAA,EACNF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qFACJC,EAAAA,EAAAA,MAACiB,EAAe,CAAAlB,SAAA,EACZF,EAAAA,EAAAA,KAACvD,EAAK,CACFgE,KAAM0C,EAAe,OAAS,WAC9BiB,MAAOb,EACPc,SA3BM,SAACC,GACvBd,EAAiBc,EAAEC,OAAOH,MAC9B,EA0BoB7D,YAAY,qFAEhBP,EAAAA,EAAAA,KAACqB,EAAO,CAACX,QAfQ,WAC7B0C,GAAgB,SAAC5D,GAAI,OAAMA,CAAI,GACnC,EAa2DU,SACtCiD,GAAenD,EAAAA,EAAAA,KAACwE,EAAAA,IAAU,KAAMxE,EAAAA,EAAAA,KAACyE,EAAAA,IAAK,UAG/CzE,EAAAA,EAAAA,KAACsB,EAAW,CAACZ,QA9BG,WACxBkB,GAAS8C,EAAAA,EAAAA,IAAcnB,IACvB3B,GAAS+C,EAAAA,EAAAA,MACb,EA2BsDzE,SAAC,sGAG1CgB,EAAS0D,SAAiC,qBAAtBf,EAASgB,WAC1B1E,EAAAA,EAAAA,MAAChD,EAAe,CAAA+C,SAAA,EACZF,EAAAA,EAAAA,KAACuB,EAAa,CAACb,QAAS,kBAAMqD,EAAa,2DAAc,EAAC7D,SAAC,yGAG3DF,EAAAA,EAAAA,KAACuB,EAAa,CAACb,QAAS,kBAAMqD,EAAa,oDAAY,EAAC7D,SAAC,oGAMhEgB,EAAS0D,SAAiC,cAAtBf,EAASgB,WAC1B7E,EAAAA,EAAAA,KAAC7C,EAAe,CAAA+C,UACZF,EAAAA,EAAAA,KAACuB,EAAa,CAAArB,SAAE,qCAMvByD,IAAc3D,EAAAA,EAAAA,KAAC0B,EAAa,CAACC,SAAUqC,QAIxD,C,qEC5Eac,E,QAAO1I,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8Q,SCAhBsE,EAAO,SAAD1B,GAAgC,IAA7B2B,EAAK3B,EAAL2B,MAAKkE,EAAA7F,EAAC8F,YAAAA,OAAW,IAAAD,EAAC,WAAK,EAACA,EAC1C,OAEQ/E,EAAAA,EAAAA,KAAC8E,EAAK,CAACpE,QAASsE,EAAY9E,SACzBW,GAKf,C","sources":["components/Feedback/Feedback.styled.js","components/Feedback/Feedback.js","Pages/Feedback/Feedback.js","redux/check/selects.js","components/PasswordCheck/PasswordCheck.styled.js","components/Answer/AnswerService.styled.js","components/Answer/AnswerService.js","redux/services/selects.js","components/PasswordCheck/PasswordCheck.js","components/Title/Title.styled.js","components/Title/Title.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form=styled.form`\n@media (min-width: 768px) {\n    padding-left: 40px;\n    padding-right: 40px;\n}\n\n@media (min-width: 1440px) {\n    padding-left: 100px;\n    padding-right: 100px;\n}\n`\n\nexport const Label=styled.label`\nwidth: 100%;\n`\n\nexport const Select=styled.select`\nmargin-top: 10px;\nmargin-bottom: 30px;\nwidth: 100%;\nheight: 50px;\nborder-radius: 10px;\nbackground: #FFFFFF;\noutline: none;\n`\n\nexport const Input=styled.input`\nmargin-bottom: ${p=>p.theme.spacing(6)};\nmargin-top: ${p=>p.theme.spacing(2)};\npadding-left: ${p=>p.theme.spacing(4)};\nwidth: 100%;\nheight: 44px;\nborder-radius: 20px;\nbackground: #FFFFFF;\noutline: none;\n\nborder: 1px solid #1D1E211A;\n\n&::placeholder{\n    padding-left: 20px;\n    font-family: Inter;\n    font-size: 12px;\n    font-weight: 400;\n    line-height: 1,5;\n    color: #1D1E2166;\n}\n\n@media (min-width: 1440px) {\n    &::placeholder {\n        font-size: 22px;\n    }\n  }\n`\n\nexport const Textarea=styled.textarea`\nmargin-bottom: ${p=>p.theme.spacing(6)};\nmargin-top: ${p=>p.theme.spacing(2)};\npadding-left: ${p=>p.theme.spacing(4)};\nwidth: 100%;\nheight: 300px;\nborder-radius: 10px;\nbackground: #FFFFFF;\noutline: none;\n\nborder: 1px solid #1D1E211A;\n\n&::placeholder{\n    padding-left: 20px;\n    padding-top: 10px;\n    font-family: Inter;\n    font-size: 12px;\n    font-weight: 400;\n    line-height: 1,5;\n    color: #1D1E2166;\n}\n\n@media (min-width: 1440px) {\n    &::placeholder {\n     font-size: 22px; \n    }\n  }\n`\n\nexport const Span=styled.span`\ncolor: red;\n`\n\nexport const ContainerButton=styled.div`\ndisplay: flex;\njustify-content: center;\ngap:20px;\n`\n\nexport const Button = styled.button`\npadding: 10px;\ncolor: white;\nbackground:${p=>p.theme.colors.green};\nborder-radius: 10px;\ncursor: pointer;\n`\n\nexport const ButtonDonation = styled.button`\npadding: 10px;\ncolor: ${p=>p.theme.colors.green};\nborder: 2px solid ${p=>p.theme.colors.green};   \nborder-radius: 10px;\ncursor: pointer;\n\n&:hover{\ncolor: ${p=>p.theme.colors.white};\nbackground:${p=>p.theme.colors.green};    \n}\n`","import { useForm } from \"react-hook-form\";\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport {Form, Label, Textarea, Input, Span, ContainerButton, Button, ButtonDonation} from './Feedback.styled';\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst SignupSchema = Yup.object().shape({\n  fullName: Yup.string().required(\"Це поле обов'язкове\"),\n  email: Yup.string()\n    .email(\"Введіть дійсну електронну пошту\")\n    .required(\"Це поле обов'язкове\"),\n  phone: Yup.string()\n    .matches(/^[\\d\\-+()\\s]*$/, \"Введіть коректний номер телефону\")\n    .nullable(),\n});\n\nexport const FeedBack=()=>{\n\n      const navigate=useNavigate();\n    \n      const handleClickDonation=()=>{\n        navigate(\"/donation\")\n      }\n\n  const { register, handleSubmit, reset, formState: { errors } } = useForm({\n    resolver: yupResolver(SignupSchema),\n  });    \n\nconst onSubmit = async (data) => {\n    console.log(data)\n    reset();\n}\n   \n    return(\n        <>\n  <Form onSubmit={handleSubmit(onSubmit)}>\n     \n      <Label htmlFor=\"fullName\">Ваше питання:</Label>\n      <Textarea\n        id=\"fullName\"\n        {...register(\"fullName\")}\n        placeholder=\"Ваше питання\"\n      />\n      {errors.fullName && <p>{errors.fullName.message}</p>}\n\n      <Label htmlFor=\"email\">Для зворотного зв'язку (email):</Label>\n      <Input\n        type=\"email\"\n        id=\"email\"\n        {...register(\"email\")}\n        placeholder=\"Введіть вашу електронну пошту\"\n      />\n      {errors.email && <p>{errors.email.message}</p>}\n\n      <Label htmlFor=\"phone\">Введіть ваш телефон <Span>* Не обов'язково:</Span></Label>\n      <Input\n        type=\"text\"\n        id=\"phone\"\n        {...register(\"phone\")}\n        placeholder=\"+380\"\n      />\n      {errors.phone && <p>{errors.phone.message}</p>}\n\n      <ContainerButton>\n         <Button type=\"submit\">Надіслати</Button>\n         <ButtonDonation type=\"button\" onClick={handleClickDonation}>Пожертва</ButtonDonation>        \n      </ContainerButton>\n    </Form>\n\n        </>\n    )\n}","import {Tittle} from '../../components/Title/Title';\nimport {FeedBack} from '../../components/Feedback/Feedback';\nimport {PasswordCheck} from '../../components/PasswordCheck/PasswordCheck';\n\nexport default function Feedback(){\n    return(\n        <>\n        <Tittle title=\"Зворотній зв'язок\"></Tittle>\n        <FeedBack/>\n        <PasswordCheck/>\n        </>\n    )\n}","export const selectPassword=state=>state.check.password;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\nmargin-top: 20px;\npadding: 20px; \nfont-family: Arial;\n`\n\nexport const PasswordWrapper = styled.div`\n    width: 35%;\n    position: relative;\n    display: flex;\n    align-items: center;\n`;\n\nexport const EyeIcon = styled.div`\n    position: absolute;\n    right: 10px;\n    cursor: pointer;\n    font-size: 1.2em;\n    color: gray;\n\n    &:hover {\n        color: black;\n    }\n`;\n\nexport const Input=styled.input`\nwidth: 100%;\npadding: 10px;\npadding-right: 50px;\nfont-size: 16px;\nmargin-bottom: 10px;\nborder: 1px solid #ccc;\nborder-radius: 5px;\n`\n\nexport const ButtonCheck=styled.button`\ndisplay: block;\nmargin-top: 10px;\npadding: 10px 20px;\nfont-size: 16px;\nbackground-color: #007bff;\ncolor: #fff;\nborder: none;\nborder-radius: 5px;\ncursor: pointer;\n`\nexport const ContainerButton=styled.div`\nmargin-top: 20px;\n@media (min-width: 768px) {\n    display: flex;\n    gap:10px;\n    justify-content: center;\n    \n}\n`\nexport const ButtonSuccess=styled.button`\ndisplay: block;\nmargin-top: 10px;\npadding: 10px 20px;\nfont-size: 16px;\nbackground-color: #28a745;\ncolor: #fff;\nborder: none;\nborder-radius: 5px;\ncursor: pointer;\n`","import styled from \"styled-components\";\n\nexport const Container=styled.ul`\nmargin-top: 20px;\ndisplay: flex;\nflex-direction: column;\ngap:20px;\n\n`\n\nexport const SpanTitle=styled.span`\ntext-decoration: underline;\n`\n\nexport const Iterm=styled.li`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n\npadding:20px;\nlist-style: none;\nborder: 1px solid ${p=>p.theme.colors.green};\nborder-radius: 10px;\n`\n\nexport const Span=styled.span`\n/* font-size: 24px; */\nfont-weight: 600;\n`\n\n","import {Container, Iterm, Span, SpanTitle} from './AnswerService.styled';\nimport sprite from '../../images/sprite.svg';\nimport {deleteService} from '../../redux/operations';\nimport { useDispatch } from 'react-redux';\n\nexport const AnswerService = ({ services }) => {\n    const dispatch=useDispatch();\n\n\n    return (\n        <>\n            <Container>\n                {services.map(service => {\n                    const formattedDate = new Date(service.updatedAt).toLocaleDateString(\"uk-UA\", {\n                        year: \"numeric\",\n                        month: \"long\",\n                        day: \"numeric\",\n                    });\n\n                    return (\n                        <Iterm key={service._id}>\n                            <div>\n                            <h4>\n                                <Span>Вид послуги: </Span> <SpanTitle>{service.type}</SpanTitle>\n                            </h4>\n                            <p>\n                                <Span>Ім'я: </Span> {service.fullName}\n                            </p>\n                            <p>\n                                <Span>Пошта: </Span> {service.email}\n                            </p>\n                            <p>\n                                <Span>Телефон: </Span> {service.phone}\n                            </p>\n                            <p>\n                                <Span>Дата: </Span> {formattedDate}\n                            </p>\n\n                            </div>\n\n                            <svg width={32} height={32} onClick={()=>{dispatch(deleteService(service._id))}}>\n                                <use xlinkHref={sprite + '#icon-dump'}/>\n                            </svg>\n                        </Iterm>\n                    );\n                })}\n            </Container>\n        </>\n    );\n};","export const selectService =state => state.services.services;","import { useDispatch, useSelector } from 'react-redux';\nimport { checkPassword, fetchService } from '../../redux/operations';\nimport { selectPassword } from '../../redux/check/selects';\nimport { useState } from 'react';\nimport { Container, Input, ButtonCheck, ContainerButton, ButtonSuccess, PasswordWrapper, EyeIcon } from './PasswordCheck.styled';\nimport { AnswerService } from '../../components/Answer/AnswerService';\nimport { selectService } from 'redux/services/selects';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa'; // Импорт иконок\nimport { useLocation } from 'react-router-dom'; // Импорт useLocation\n\nexport const PasswordCheck = () => {\n    const password = useSelector(selectPassword);\n    const [showPassword, setShowPassword] = useState(false);\n    const [passwordValue, setPasswordValue] = useState('');\n    const [showFilter, setFilter] = useState('');\n    const services = useSelector(selectService);\n    const dispatch = useDispatch();\n    const location = useLocation(); // Получение текущего пути\n\n    const handleInputChange = (e) => {\n        setPasswordValue(e.target.value);\n    };\n\n    const handleCheckPassword = () => {\n        dispatch(checkPassword(passwordValue));\n        dispatch(fetchService());\n    };\n\n    const handleFilter = (type) => {\n        setFilter(type);\n    };\n\n    const filteredData = services.filter((item) => item.type.trim() === showFilter.trim());\n\n    const togglePasswordVisibility = () => {\n        setShowPassword((prev) => !prev);\n    };\n\n    return (\n        <>\n            <Container>\n                <h3>Введіть пароль</h3>\n                <PasswordWrapper>\n                    <Input\n                        type={showPassword ? 'text' : 'password'}\n                        value={passwordValue}\n                        onChange={handleInputChange}\n                        placeholder=\"Введіть пароль\"\n                    />\n                    <EyeIcon onClick={togglePasswordVisibility}>\n                        {showPassword ? <FaEyeSlash /> : <FaEye />}\n                    </EyeIcon>\n                </PasswordWrapper>\n                <ButtonCheck onClick={handleCheckPassword}>Перевірити пароль</ButtonCheck>\n\n                {/* Проверяем текущий путь и успешность проверки пароля */}\n                {password.success && location.pathname === '/online-services' && (\n                    <ContainerButton>\n                        <ButtonSuccess onClick={() => handleFilter(\"За здоров'я\")}>\n                            Записки за здоров'я\n                        </ButtonSuccess>\n                        <ButtonSuccess onClick={() => handleFilter(\"За упокій\")}>\n                            Записки за упокій\n                        </ButtonSuccess>\n                    </ContainerButton>\n                )}\n\n                {password.success && location.pathname === '/feedback' && (\n                    <ContainerButton>\n                        <ButtonSuccess >\n                            Листи\n                        </ButtonSuccess>\n                    </ContainerButton>\n                )}\n\n                {showFilter && <AnswerService services={filteredData} />}\n            </Container>\n        </>\n    );\n};","import styled from \"styled-components\";\n\n\nexport const Title =styled.h2`\nmargin-bottom: 20px;\nmargin-top: 20px;\ntext-align: center;\nfont-size: 28px;\n\ncursor: pointer;\n\n&:hover{\n    text-decoration: underline;\n}\n\n@media (min-width: 768px) {\n    font-size: 34px;\n}\n\n@media (min-width: 1440px) {\n    font-size:40px;\n}\n`","import {Title} from './Title.styled';\n\n\nexport const Tittle=({title,handleClick=()=>{}})=>{\n    return(\n\n            <Title onClick={handleClick}> \n              {title}\n            </Title>\n                \n\n    )\n}"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","_templateObject4","p","theme","spacing","Textarea","_templateObject5","Span","_templateObject6","ContainerButton","_templateObject7","Button","_templateObject8","colors","green","ButtonDonation","_templateObject9","white","SignupSchema","Yup","shape","fullName","required","email","phone","matches","nullable","FeedBack","navigate","useNavigate","_useForm","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","console","log","stop","_x","apply","arguments","_jsx","_Fragment","children","_jsxs","htmlFor","_objectSpread","id","placeholder","message","type","onClick","Feedback","Tittle","title","PasswordCheck","selectPassword","state","check","password","Container","PasswordWrapper","EyeIcon","ButtonCheck","ButtonSuccess","SpanTitle","Iterm","AnswerService","services","dispatch","useDispatch","map","service","formattedDate","Date","updatedAt","toLocaleDateString","year","month","day","width","height","deleteService","_id","xlinkHref","sprite","selectService","useSelector","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","passwordValue","setPasswordValue","_useState5","_useState6","showFilter","setFilter","location","useLocation","handleFilter","filteredData","filter","item","trim","value","onChange","e","target","FaEyeSlash","FaEye","checkPassword","fetchService","success","pathname","Title","_ref$handleClick","handleClick"],"sourceRoot":""}