{"version":3,"file":"static/js/673.e47e9c1a.chunk.js","mappings":"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","sources":["components/Feedback/Feedback.styled.js","components/Feedback/Feedback.js","Pages/FeedbackPage/FeedbackPage.styled.js","Pages/FeedbackPage/FeedbackPage.js","redux/check/selects.js","components/PasswordCheck/PasswordCheck.styled.js","components/Answer/AnswerService.styled.js","components/Answer/AnswerService.js","redux/services/selects.js","redux/feedBack/selects.js","components/PasswordCheck/PasswordCheck.js","components/Title/Title.styled.js","components/Title/Title.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form=styled.form`\n@media (min-width: 768px) {\n    padding-left: 40px;\n    padding-right: 40px;\n}\n\n@media (min-width: 1440px) {\n    padding-left: 100px;\n    padding-right: 100px;\n}\n`\n\nexport const Label=styled.label`\nwidth: 100%;\n`\n\nexport const Input=styled.input`\nmargin-bottom: ${p=>p.theme.spacing(6)};\nmargin-top: ${p=>p.theme.spacing(2)};\npadding-left: ${p=>p.theme.spacing(4)};\nwidth: 100%;\nheight: 44px;\nborder-radius: 20px;\nbackground: #FFFFFF;\noutline: none;\n\nborder: 1px solid #1D1E211A;\n\n&::placeholder{\n    padding-left: 20px;\n    font-family: Inter;\n    font-size: 12px;\n    font-weight: 400;\n    line-height: 1,5;\n    color: #1D1E2166;\n}\n\n@media (min-width: 1440px) {\n    &::placeholder {\n        font-size: 22px;\n    }\n  }\n`\n\nexport const Textarea=styled.textarea`\nmargin-bottom: ${p=>p.theme.spacing(6)};\nmargin-top: ${p=>p.theme.spacing(2)};\npadding-left: ${p=>p.theme.spacing(4)};\nwidth: 100%;\nheight: 300px;\nborder-radius: 10px;\nbackground: #FFFFFF;\noutline: none;\n\nborder: 1px solid #1D1E211A;\n\n&::placeholder{\n    padding-left: 20px;\n    padding-top: 10px;\n    font-family: Inter;\n    font-size: 12px;\n    font-weight: 400;\n    line-height: 1,5;\n    color: #1D1E2166;\n}\n\n@media (min-width: 1440px) {\n    &::placeholder {\n     font-size: 22px; \n    }\n  }\n`\n\nexport const Span=styled.span`\ncolor: red;\n`\n\nexport const ContainerButton=styled.div`\ndisplay: flex;\njustify-content: center;\ngap:20px;\n`\n\nexport const Button = styled.button`\npadding: 10px;\ncolor: white;\nbackground:${p=>p.theme.colors.green};\nborder-radius: 10px;\ncursor: pointer;\n`\n\nexport const ButtonDonation = styled.button`\npadding: 10px;\ncolor: ${p=>p.theme.colors.green};\nborder: 2px solid ${p=>p.theme.colors.green};   \nborder-radius: 10px;\ncursor: pointer;\n\n&:hover{\ncolor: ${p=>p.theme.colors.white};\nbackground:${p=>p.theme.colors.green};    \n}\n`","import { useForm } from \"react-hook-form\";\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport {Form, Label, Textarea, Input, Span, ContainerButton, Button, ButtonDonation} from './Feedback.styled';\nimport { useNavigate } from \"react-router-dom\";\nimport {addFeedback} from '../../redux/operations';\nimport { useDispatch } from \"react-redux\";\n\n\nconst SignupSchema = Yup.object().shape({\n  fullName: Yup.string().required(\"Це поле обов'язкове\"),\n  email: Yup.string()\n    .email(\"Введіть дійсну електронну пошту\")\n    .required(\"Це поле обов'язкове\"),\n  phone: Yup.string()\n    .matches(/^[\\d\\-+()\\s]*$/, \"Введіть коректний номер телефону\")\n    .nullable(),\n});\n\nexport const FeedBack=()=>{\n    const dispatch=useDispatch();\n\n      const navigate=useNavigate();\n    \n      const handleClickDonation=()=>{\n        navigate(\"/donation\")\n      }\n\n  const { register, handleSubmit, reset, formState: { errors } } = useForm({\n    resolver: yupResolver(SignupSchema),\n  });    \n\nconst onSubmit = async (data) => {\n    console.log(data)\n    dispatch(addFeedback(data))\n    reset();\n}\n   \n    return(\n        <>\n  <Form onSubmit={handleSubmit(onSubmit)}>\n     \n      <Label htmlFor=\"fullName\">Ваше питання:</Label>\n      <Textarea\n        id=\"fullName\"\n        {...register(\"fullName\")}\n        placeholder=\"Ваше питання\"\n      />\n      {errors.fullName && <p>{errors.fullName.message}</p>}\n\n      <Label htmlFor=\"email\">Для зворотного зв'язку (email):</Label>\n      <Input\n        type=\"email\"\n        id=\"email\"\n        {...register(\"email\")}\n        placeholder=\"Введіть вашу електронну пошту\"\n      />\n      {errors.email && <p>{errors.email.message}</p>}\n\n      <Label htmlFor=\"phone\">Введіть ваш телефон <Span>* Не обов'язково:</Span></Label>\n      <Input\n        type=\"text\"\n        id=\"phone\"\n        {...register(\"phone\")}\n        placeholder=\"+380\"\n      />\n      {errors.phone && <p>{errors.phone.message}</p>}\n\n      <ContainerButton>\n         <Button type=\"submit\">Надіслати</Button>\n         <ButtonDonation type=\"button\" onClick={handleClickDonation}>Пожертва</ButtonDonation>        \n      </ContainerButton>\n    </Form>\n\n        </>\n    )\n}","import styled from \"styled-components\"\n\nexport const Container=styled.div`\npadding: 20px;\nbackground-color: ${p=>(p.theme.colors.yellow)};\n`","import {Tittle} from '../../components/Title/Title';\nimport {FeedBack} from '../../components/Feedback/Feedback';\nimport {PasswordCheck} from '../../components/PasswordCheck/PasswordCheck';\nimport { Container } from './FeedbackPage.styled';\n\nexport default function FeedbackPage(){\n    return(\n        <Container>\n           <Tittle title=\"Зворотній зв'язок\"></Tittle>\n           <FeedBack/>\n           <PasswordCheck/>\n        </Container>\n    )\n}","export const selectPassword=state=>state.check.password;\nexport const selectErrorPassword=state=>state.check.error;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\nmargin-top: 20px;\npadding: 20px; \nfont-family: Arial;\n`\n\nexport const PasswordWrapper = styled.div`\n    width: 70%;\n    position: relative;\n    display: flex;\n    align-items: center;\n\n    @media (min-width: 768px) {\n        width: 35%;\n    }\n`;\n\nexport const EyeIcon = styled.div`\n    position: absolute;\n    right: 10px;\n    cursor: pointer;\n    font-size: 1.2em;\n    color: gray;\n\n    &:hover {\n        color: black;\n    }\n`;\n\nexport const Input=styled.input`\nwidth: 100%;\npadding: 10px;\npadding-right: 50px;\nfont-size: 16px;\nmargin-bottom: 10px;\nborder: 1px solid #ccc;\nborder-radius: 5px;\n`\n\nexport const ButtonCheck=styled.button`\ndisplay: block;\nmargin-top: 10px;\npadding: 10px 20px;\nfont-size: 16px;\nbackground-color: #007bff;\ncolor: #fff;\nborder: none;\nborder-radius: 5px;\ncursor: pointer;\n\n&:hover{\ncolor: black;\n}\n`\nexport const ContainerButton=styled.div`\nmargin-top: 20px;\n@media (min-width: 768px) {\n    display: flex;\n    gap:10px;\n    justify-content: center;\n    \n}\n`\nexport const ButtonSuccess=styled.button`\ndisplay: block;\nmargin-top: 10px;\npadding: 10px 20px;\nfont-size: 16px;\nbackground-color: #28a745;\ncolor: #fff;\nborder: none;\nborder-radius: 5px;\ncursor: pointer;\n\n&:hover{\ncolor: black;\n}\n`\nexport const Error=styled.p`\ncolor: red;\nmargin-top: 10px; \n`","import styled from \"styled-components\";\n\nexport const Container=styled.ul`\nmargin-top: 20px;\ndisplay: flex;\nflex-direction: column;\ngap:20px;\n\n`\n\nexport const SpanTitle=styled.span`\ntext-decoration: underline;\n`\n\nexport const Iterm=styled.li`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n\npadding:20px;\nlist-style: none;\nborder: 1px solid ${p=>p.theme.colors.green};\nborder-radius: 10px;\n`\n\nexport const Span=styled.span`\n/* font-size: 24px; */\nfont-weight: 600;\n`\n\n","import {Container, Iterm, Span, SpanTitle} from './AnswerService.styled';\nimport sprite from '../../images/sprite.svg';\nimport {deleteService, deleteFeedback} from '../../redux/operations';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom'; // Импорт useLocation\n\n\nexport const AnswerService = ({ services }) => {\n    const dispatch=useDispatch();\n    const location = useLocation(); // Получение текущего пути\n\n\n    return (\n        <>\n            <Container>\n                {services.map(service => {\n                    const formattedDate = new Date(service.updatedAt).toLocaleDateString(\"uk-UA\", {\n                        year: \"numeric\",\n                        month: \"long\",\n                        day: \"numeric\",\n                    });\n\n                    return (\n                        <Iterm key={service._id}>\n                            <div>\n\n                                {location.pathname === '/online-services' &&(\n                                    <>\n                            <h4>\n                                <Span>Вид послуги: </Span> <SpanTitle>{service.type}</SpanTitle>\n                            </h4>\n                            <p>\n                                <Span>Ім'я: </Span> {service.fullName}\n                            </p>                                \n                                </>\n                                )}\n\n                                {location.pathname === '/feedback' &&(\n                                    <>\n                            <p>\n                                <Span>Лист: </Span> {service.fullName}\n                            </p>                                \n                                </>\n                                )}\n                                \n                            <p>\n                                <Span>Пошта: </Span> {service.email}\n                            </p>\n                            <p>\n                                <Span>Телефон: </Span> {service.phone}\n                            </p>\n                            <p>\n                                <Span>Дата: </Span> {formattedDate}\n                            </p>\n\n                            </div>\n\n                            {location.pathname === '/online-services' &&(\n                            <svg width={32} height={32} onClick={()=>{dispatch(deleteService(service._id))}}>\n                                <use xlinkHref={sprite + '#icon-dump'}/>\n                            </svg>                                \n                            )}\n\n                            {location.pathname === '/feedback' &&(\n                            <svg width={32} height={32} onClick={()=>{dispatch(deleteFeedback(service._id))}}>\n                                 <use xlinkHref={sprite + '#icon-dump'}/>\n                            </svg>  \n                            )}\n\n\n                        </Iterm>\n                    );\n                })}\n            </Container>\n        </>\n    );\n};","export const selectService =state => state.services.services;","export const selectFeedback=state=>state.feedbacks.feedbacks;","import { useDispatch, useSelector } from 'react-redux';\nimport { checkPassword, fetchFeedback, fetchService } from '../../redux/operations';\nimport { selectPassword } from '../../redux/check/selects';\nimport { useState } from 'react';\nimport { Container, Input, ButtonCheck, ContainerButton, ButtonSuccess, PasswordWrapper, EyeIcon, Error } from './PasswordCheck.styled';\nimport { AnswerService } from '../../components/Answer/AnswerService';\nimport { selectService } from 'redux/services/selects';\nimport { selectFeedback } from '../../redux/feedBack/selects';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa'; // Импорт иконок\nimport { useLocation } from 'react-router-dom'; // Импорт useLocation\n\nexport const PasswordCheck = () => {\n    const password = useSelector(selectPassword);\n    const feedback = useSelector(selectFeedback);\n   \n\n    const [showPassword, setShowPassword] = useState(false);\n    const [passwordValue, setPasswordValue] = useState('');\n    const [showFilter, setFilter] = useState('');\n    const [showFeedback, setShowFeedback] = useState(false); // Добавлено состояние для отображения feedback\n    const [errorMessage, setErrorMessage] = useState(''); \n\n\n    const services = useSelector(selectService);\n    const dispatch = useDispatch();\n    const location = useLocation(); // Получение текущего пути\n\n    const handleInputChange = (e) => {\n        setPasswordValue(e.target.value);\n    };\n\n    const handleCheckPassword = () => {\n            setErrorMessage('');\n            dispatch(checkPassword(passwordValue))\n\n                dispatch(fetchService());\n                dispatch(fetchFeedback());\n            if (!password.success) {\n                setErrorMessage('Пароль не вірний'); }\n    };\n\n\n    const handleFilter = (type) => {\n        setFilter(type);\n    };\n\n    const handleShowFeedback = () => {\n        setShowFeedback(!showFeedback); // Устанавливаем состояние для отображения feedback\n    };\n\n    const filteredData = services.filter((item) => item.type.trim() === showFilter.trim());\n\n    const togglePasswordVisibility = () => {\n        setShowPassword(!showPassword);\n    };\n\n\n    return (\n        <>\n            <Container>\n                <h3>Введіть пароль</h3>\n                <PasswordWrapper>\n                    <Input\n                        type={showPassword ? 'text' : 'password'}\n                        value={passwordValue}\n                        onChange={handleInputChange}\n                        placeholder=\"Введіть пароль\"\n                    />\n                    <EyeIcon onClick={togglePasswordVisibility}>\n                        {!showPassword ? <FaEyeSlash /> : <FaEye />}\n                    </EyeIcon>\n                </PasswordWrapper>\n                <ButtonCheck onClick={handleCheckPassword}>Перевірити пароль</ButtonCheck>\n\n                {errorMessage && !password.success &&(\n                    <Error>{errorMessage}</Error>\n                )}\n\n                {/* {!password.success && (\n                   <Error >Пароль не вірний</Error>\n                )} */}\n\n                {/* Проверяем текущий путь и успешность проверки пароля */}\n                {password.success && location.pathname === '/online-services' && (\n                    <ContainerButton>\n                        <ButtonSuccess onClick={() => handleFilter(\"За здоров'я\")}>\n                            Записки за здоров'я\n                        </ButtonSuccess>\n                        <ButtonSuccess onClick={() => handleFilter(\"За упокій\")}>\n                            Записки за упокій\n                        </ButtonSuccess>\n                        <ButtonSuccess onClick={() => handleFilter(\"сорокоуст за здоров’я\")}>\n                        Сорокоуст за здоров’я\n                        </ButtonSuccess>\n                        <ButtonSuccess onClick={() => handleFilter(\"сорокоуст за упокій\")}>\n                        Сорокоуст за упокій\n                        </ButtonSuccess>\n                        <ButtonSuccess onClick={() => handleFilter(\"молебень на здоров’я та іншу потребу\")}>\n                        Молебень на здоров’я та іншу потребу\n                        </ButtonSuccess>\n\n                    </ContainerButton>\n                )}\n\n                {password.success && location.pathname === '/feedback' && (\n                    <ContainerButton>\n                        <ButtonSuccess onClick={handleShowFeedback}>\n                            Листи\n                        </ButtonSuccess>\n                    </ContainerButton>\n                )}\n\n                {showFilter && <AnswerService services={filteredData} />}\n                {showFeedback && feedback && <AnswerService services={feedback} />}\n            </Container>\n        </>\n    );\n};","import styled from \"styled-components\";\n\n\nexport const Title =styled.h2`\nmargin-bottom: 20px;\nmargin-top: 20px;\ntext-align: center;\nfont-size: 28px;\ntext-shadow: -2px -2px 0px rgb(231, 251, 48), 2px 2px 0px rgb(41, 198, 223);\n\ncursor: pointer;\n\n&:hover{\n    text-decoration: underline;\n}\n\n@media (min-width: 768px) {\n    font-size: 34px;\n}\n\n@media (min-width: 1440px) {\n    font-size:40px;\n}\n`","import {Title} from './Title.styled';\n\n\nexport const Tittle=({title,handleClick=()=>{}})=>{\n    return(\n\n            <Title onClick={handleClick}> \n              {title}\n            </Title>\n                \n\n    )\n}"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","p","theme","spacing","Textarea","_templateObject4","Span","_templateObject5","ContainerButton","_templateObject6","Button","_templateObject7","colors","green","ButtonDonation","_templateObject8","white","SignupSchema","Yup","shape","fullName","required","email","phone","matches","nullable","FeedBack","dispatch","useDispatch","navigate","useNavigate","_useForm","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","console","log","addFeedback","stop","_x","apply","arguments","_jsx","_Fragment","children","_jsxs","htmlFor","_objectSpread","id","placeholder","message","type","onClick","Container","yellow","FeedbackPage","Tittle","title","PasswordCheck","selectPassword","state","check","password","PasswordWrapper","EyeIcon","ButtonCheck","ButtonSuccess","Error","SpanTitle","Iterm","AnswerService","services","location","useLocation","map","service","formattedDate","Date","updatedAt","toLocaleDateString","year","month","day","pathname","width","height","deleteService","_id","xlinkHref","sprite","deleteFeedback","selectService","selectFeedback","feedbacks","useSelector","feedback","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","passwordValue","setPasswordValue","_useState5","_useState6","showFilter","setFilter","_useState7","_useState8","showFeedback","setShowFeedback","_useState9","_useState10","errorMessage","setErrorMessage","handleFilter","filteredData","filter","item","trim","value","onChange","e","target","FaEye","FaEyeSlash","checkPassword","fetchService","fetchFeedback","success","Title","_ref$handleClick","handleClick"],"sourceRoot":""}