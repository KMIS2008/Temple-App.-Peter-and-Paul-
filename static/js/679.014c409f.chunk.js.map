{"version":3,"file":"static/js/679.014c409f.chunk.js","mappings":"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","sources":["components/Services/Services.styled.js","components/Services/Services.js","redux/check/selects.js","components/PasswordCheck/PasswordCheck.styled.js","components/Answer/AnswerService.styled.js","components/Answer/AnswerService.js","redux/services/selects.js","components/PasswordCheck/PasswordCheck.js","Pages/OnlineServices/OnlineServices.js","components/Title/Title.styled.js","components/Title/Title.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form=styled.form`\n@media (min-width: 768px) {\n    padding-left: 40px;\n    padding-right: 40px;\n}\n\n@media (min-width: 1440px) {\n    padding-left: 100px;\n    padding-right: 100px;\n}\n`\n\nexport const Label=styled.label`\nwidth: 100%;\n`\n\nexport const Select=styled.select`\nmargin-top: 10px;\nmargin-bottom: 30px;\nwidth: 100%;\nheight: 50px;\nborder-radius: 10px;\nbackground: #FFFFFF;\noutline: none;\n`\n\nexport const Input=styled.input`\nmargin-bottom: ${p=>p.theme.spacing(6)};\nmargin-top: ${p=>p.theme.spacing(2)};\npadding-left: ${p=>p.theme.spacing(4)};\nwidth: 100%;\nheight: 44px;\nborder-radius: 20px;\nbackground: #FFFFFF;\noutline: none;\n\nborder: 1px solid #1D1E211A;\n\n&::placeholder{\n    padding-left: 20px;\n    font-family: Inter;\n    font-size: 12px;\n    font-weight: 400;\n    line-height: 1,5;\n    color: #1D1E2166;\n}\n\n@media (min-width: 1440px) {\n    &::placeholder {\n        font-size: 22px;\n    }\n  }\n`\n\nexport const Textarea=styled.textarea`\nmargin-bottom: ${p=>p.theme.spacing(6)};\nmargin-top: ${p=>p.theme.spacing(2)};\npadding-left: ${p=>p.theme.spacing(4)};\nwidth: 100%;\nheight: 300px;\nborder-radius: 10px;\nbackground: #FFFFFF;\noutline: none;\n\nborder: 1px solid #1D1E211A;\n\n&::placeholder{\n    padding-left: 20px;\n    padding-top: 10px;\n    font-family: Inter;\n    font-size: 12px;\n    font-weight: 400;\n    line-height: 1,5;\n    color: #1D1E2166;\n}\n\n@media (min-width: 1440px) {\n    &::placeholder {\n     font-size: 22px; \n    }\n  }\n`\n\nexport const Span=styled.span`\ncolor: red;\n`\n\nexport const Button = styled.button`\npadding: 10px;\ncolor: white;\nbackground:${p=>p.theme.colors.green};\nborder-radius: 10px;\ncursor: pointer;\n`","import { useForm } from \"react-hook-form\";\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport {Form, Label,Select, Textarea, Input, Span, Button} from './Services.styled';\nimport { useDispatch } from \"react-redux\";\nimport {addServices} from '../../redux/operations';\n\nconst SignupSchema = Yup.object().shape({\n  type: Yup.string().required(\"Виберіть тип послуги\"),\n  fullName: Yup.string().required(\"Це поле обов'язкове\"),\n  email: Yup.string()\n    .email(\"Введіть дійсну електронну пошту\")\n    .required(\"Це поле обов'язкове\"),\n  phone: Yup.string()\n    .matches(/^[\\d\\-+()\\s]*$/, \"Введіть коректний номер телефону\")\n    .nullable(),\n});\n\nexport const ServicesForm = () => {\n  const dispatch=useDispatch();\n\n  const { register, handleSubmit, reset, formState: { errors } } = useForm({\n    resolver: yupResolver(SignupSchema),\n  });\n\n  const onSubmit = async (data) => {\n    console.log(data)\n    dispatch(addServices(data))\n    try {\n      const response = await fetch(\"https://temple-app-peter-and-paul-backend.onrender.com/api/email/send-services\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n\n      if (response.ok) {\n        console.log(\"Письмо отправлено успешно\");\n        reset();\n      } else {\n        console.error(\"Ошибка при отправке письма\");\n      }\n    } catch (error) {\n      console.error(\"Ошибка:\", error.message);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit(onSubmit)}>\n      <Label htmlFor=\"type\">Тип послуги:</Label>\n      <Select id=\"type\" {...register(\"type\")}>\n        <option value=\"\">Оберіть тип</option>\n        <option value=\"За упокій\">За упокій</option>\n        <option value=\"За здоров'я\">За здоров'я</option>\n      </Select>\n      {errors.type && <p>{errors.type.message}</p>}\n\n      <Label htmlFor=\"fullName\">Повне ім'я або декілька:</Label>\n      <Textarea\n        id=\"fullName\"\n        {...register(\"fullName\")}\n        placeholder=\"Введіть ім'я або декілька\"\n      />\n      {errors.fullName && <p>{errors.fullName.message}</p>}\n\n      <Label htmlFor=\"email\">Для зворотного зв'язку (email):</Label>\n      <Input\n        type=\"email\"\n        id=\"email\"\n        {...register(\"email\")}\n        placeholder=\"Введіть вашу електронну пошту\"\n      />\n      {errors.email && <p>{errors.email.message}</p>}\n\n      <Label htmlFor=\"phone\">Введіть ваш телефон <Span>* Не обов'язково:</Span></Label>\n      <Input\n        type=\"text\"\n        id=\"phone\"\n        {...register(\"phone\")}\n        placeholder=\"+380\"\n      />\n      {errors.phone && <p>{errors.phone.message}</p>}\n\n      <Button type=\"submit\">Відправити</Button>\n    </Form>\n  );\n};","export const selectPassword=state=>state.check.password;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\nmargin-top: 20px;\npadding: 20px; \nfont-family: Arial;\n`\n\nexport const Input=styled.input`\npadding: 10px;\nfont-size: 16px;\nmargin-bottom: 10px;\nborder: 1px solid #ccc;\nborder-radius: 5px;\n`\n\nexport const ButtonCheck=styled.button`\ndisplay: block;\nmargin-top: 10px;\npadding: 10px 20px;\nfont-size: 16px;\nbackground-color: #007bff;\ncolor: #fff;\nborder: none;\nborder-radius: 5px;\ncursor: pointer;\n`\nexport const ContainerButton=styled.div`\nmargin-top: 20px;\n@media (min-width: 768px) {\n    display: flex;\n    gap:10px;\n    justify-content: center;\n    \n}\n`\nexport const ButtonSuccess=styled.button`\ndisplay: block;\nmargin-top: 10px;\npadding: 10px 20px;\nfont-size: 16px;\nbackground-color: #28a745;\ncolor: #fff;\nborder: none;\nborder-radius: 5px;\ncursor: pointer;\n`","import styled from \"styled-components\";\n\nexport const Container=styled.ul`\nmargin-top: 20px;\ndisplay: flex;\nflex-direction: column;\ngap:20px;\n\n`\n\nexport const SpanTitle=styled.span`\ntext-decoration: underline;\n`\n\nexport const Iterm=styled.li`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\n\npadding:20px;\nlist-style: none;\nborder: 1px solid ${p=>p.theme.colors.green};\nborder-radius: 10px;\n`\n\nexport const Span=styled.span`\n/* font-size: 24px; */\nfont-weight: 600;\n`\n\n","import {Container, Iterm, Span, SpanTitle} from './AnswerService.styled';\nimport sprite from '../../images/sprite.svg';\n\nexport const AnswerService = ({ services }) => {\n    return (\n        <>\n            <Container>\n                {services.map(service => {\n                    const formattedDate = new Date(service.updatedAt).toLocaleDateString(\"uk-UA\", {\n                        year: \"numeric\",\n                        month: \"long\",\n                        day: \"numeric\",\n                    });\n\n                    return (\n                        <Iterm key={service._id}>\n                            <div>\n                            <h4>\n                                <Span>Вид послуги: </Span> <SpanTitle>{service.type}</SpanTitle>\n                            </h4>\n                            <p>\n                                <Span>Ім'я: </Span> {service.fullName}\n                            </p>\n                            <p>\n                                <Span>Пошта: </Span> {service.email}\n                            </p>\n                            <p>\n                                <Span>Телефон: </Span> {service.phone}\n                            </p>\n                            <p>\n                                <Span>Дата: </Span> {formattedDate}\n                            </p>\n\n                            </div>\n\n                            <svg width={32} height={32}>\n                                <use xlinkHref={sprite + '#icon-dump'}/>\n                            </svg>\n                        </Iterm>\n                    );\n                })}\n            </Container>\n        </>\n    );\n};","export const selectService =state => state.services.services;","import { useDispatch, useSelector } from 'react-redux';\nimport {checkPassword, fetchService} from '../../redux/operations';\nimport {selectPassword} from '../../redux/check/selects';\nimport { useState } from 'react';\nimport {Container, Input, ButtonCheck, ContainerButton, ButtonSuccess} from './PasswordCheck.styled';\nimport {AnswerService} from '../../components/Answer/AnswerService';\nimport { selectService } from 'redux/services/selects';\n\nexport const PasswordCheck=()=>{\n    const password=useSelector(selectPassword)\n    const [showpassword, setPassword] = useState('');\n    const [showFilter,setFilter]=useState('');\n    const services=useSelector(selectService);\n    const dispatch=useDispatch();\n\n    const handleInputChange =(e)=>{\n        setPassword(e.target.value)\n    }\n\n    const handleCheckPassword=()=>{\n        dispatch(checkPassword(showpassword))\n        dispatch(fetchService())\n    }\n\n    const handleFilter = (type) => {\n         setFilter(type)\n      };\n\n    const filteredData = services.filter((item) => item.type.trim() === showFilter.trim());\n   \n\n    return(\n        <>\n         <Container>\n           <h3>Введіть пароль</h3>\n             <Input\n        type=\"password\"\n        // value={password}\n        onChange={handleInputChange}\n        placeholder=\"Введіть пароль\"\n      />\n      <ButtonCheck\n        onClick={handleCheckPassword}\n      >\n        Перевірити пароль\n      </ButtonCheck>\n      \n      {password.success && (\n        <ContainerButton>\n          <ButtonSuccess\n          onClick={()=>handleFilter(\"За здоров'я\")}\n        >\n          Записки за здоров'я\n          </ButtonSuccess>\n          <ButtonSuccess\n          onClick={()=>handleFilter(\"За упокій\")}\n        >\n          Записки за упокій\n          </ButtonSuccess>\n        </ContainerButton>  \n      )}\n\n      {showFilter&&<AnswerService services={filteredData}/>}\n\n    </Container>\n        </>\n    )\n}","import {ServicesForm} from '../../components/Services/Services';\nimport { Tittle } from 'components/Title/Title';\nimport {PasswordCheck} from '../../components/PasswordCheck/PasswordCheck';\n\nexport default function OnlineServices(){\n    return(\n        <>\n        <Tittle Tittle title=\"Записки за здоров'я та за упокій\"></Tittle>\n        <ServicesForm/>\n        <PasswordCheck/>\n        </>\n    )\n} ","import styled from \"styled-components\";\n\n\nexport const Title =styled.h2`\nmargin-bottom: 20px;\nmargin-top: 20px;\ntext-align: center;\nfont-size: 28px;\n\ncursor: pointer;\n\n&:hover{\n    text-decoration: underline;\n}\n\n@media (min-width: 768px) {\n    font-size: 34px;\n}\n\n@media (min-width: 1440px) {\n    font-size:40px;\n}\n`","import {Title} from './Title.styled';\n\n\nexport const Tittle=({title,handleClick=()=>{}})=>{\n    return(\n\n            <Title onClick={handleClick}> \n              {title}\n            </Title>\n                \n\n    )\n}"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Select","_templateObject3","Input","_templateObject4","p","theme","spacing","Textarea","_templateObject5","Span","_templateObject6","Button","_templateObject7","colors","green","SignupSchema","Yup","shape","type","required","fullName","email","phone","matches","nullable","ServicesForm","dispatch","useDispatch","_useForm","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","onSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","console","log","addServices","fetch","method","headers","body","JSON","stringify","sent","ok","error","t0","message","stop","_x","apply","arguments","_jsxs","children","_jsx","htmlFor","_objectSpread","id","value","placeholder","selectPassword","state","check","password","Container","ButtonCheck","ContainerButton","ButtonSuccess","SpanTitle","Iterm","AnswerService","services","_Fragment","map","service","formattedDate","Date","updatedAt","toLocaleDateString","year","month","day","width","height","xlinkHref","sprite","_id","selectService","PasswordCheck","useSelector","_useState","useState","_useState2","_slicedToArray","showpassword","setPassword","_useState3","_useState4","showFilter","setFilter","handleFilter","filteredData","filter","item","trim","onChange","e","target","onClick","checkPassword","fetchService","success","OnlineServices","Tittle","title","Title","_ref$handleClick","handleClick"],"sourceRoot":""}